{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "0d1ff4e6-d35d-40c8-a8ee-53dc549ad93e",
      "metadata": {
        "id": "0d1ff4e6-d35d-40c8-a8ee-53dc549ad93e"
      },
      "source": [
        "# Análisis de Anime"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "9af9881c-d473-4b26-a3ba-03be5ca52811",
      "metadata": {
        "id": "9af9881c-d473-4b26-a3ba-03be5ca52811"
      },
      "outputs": [],
      "source": [
        "#Importamos las librerías necesarias inicialmente\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "8bc32898-f991-4ca5-8ad4-8198e5a51405",
      "metadata": {
        "id": "8bc32898-f991-4ca5-8ad4-8198e5a51405"
      },
      "source": [
        "##  Lectura de datasets\n",
        "\n",
        "El data set se ha obtenido de Kaggle: https://www.kaggle.com/datasets/tanishksharma9905/top-popular-anime\n",
        "\n",
        "#### Detalles del Dataset\n",
        "\n",
        "Este conjunto de datos contiene información detallada sobre las principales series y películas de anime, clasificadas en MyAnimeList, obtenido a través de la API de Jikan — una API REST no oficial para MyAnimeList.\n",
        "\n",
        "Incluye datos de más de 1,100 páginas (más de 22,000 entradas de anime), lo que lo convierte en uno de los conjuntos de datos de anime de código abierto más completos disponibles.\n",
        "\n",
        "id\tUnique identifier (MyAnimeList ID)\n",
        "name\tEnglish title of the anime (fallback to original or Japanese title)\n",
        "genres\tComma-separated list of genres\n",
        "type\tType of anime (e.g. TV, Movie, OVA)\n",
        "episodes\tNumber of episodes\n",
        "status\tAiring status (Finished, Airing, Upcoming)\n",
        "aired_from\tStart date of airing\n",
        "aired_to\tEnd date of airing\n",
        "duration_per_ep\tDuration per episode\n",
        "score\tUser score (rating out of 10)\n",
        "scored_by\tNumber of users who rated it\n",
        "rank\tRank on MyAnimeList\n",
        "rating\tAge rating (e.g., PG-13, R)\n",
        "studios\tStudios involved in production\n",
        "producers\tProducers listed\n",
        "image\tURL to the cover image\n",
        "trailer\tURL to the trailer video\n",
        "synopsis\tShort plot summary\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "9138f9fd-04e1-4462-92ea-0009030f74d7",
      "metadata": {
        "id": "9138f9fd-04e1-4462-92ea-0009030f74d7"
      },
      "outputs": [],
      "source": [
        "\n",
        "\n",
        "anime = pd.read_csv('https://raw.githubusercontent.com/glandricina10/notebooks2/main/popular_anime.csv', parse_dates=['aired_from', 'aired_to'])\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "96d7a5cf-c0a2-4e3b-9202-42961922d65a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 642
        },
        "id": "96d7a5cf-c0a2-4e3b-9202-42961922d65a",
        "outputId": "cccbe305-4702-4d73-a2a3-693658ba8bce"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                              name                             genres  \\\n",
              "0  52991     Frieren: Beyond Journey's End          Adventure, Drama, Fantasy   \n",
              "1   5114  Fullmetal Alchemist: Brotherhood  Action, Adventure, Drama, Fantasy   \n",
              "2   9253                       Steins;Gate            Drama, Sci-Fi, Suspense   \n",
              "3  38524   Attack on Titan Season 3 Part 2            Action, Drama, Suspense   \n",
              "4  28977                  Gintama Season 4             Action, Comedy, Sci-Fi   \n",
              "\n",
              "  type  episodes           status                aired_from  \\\n",
              "0   TV      28.0  Finished Airing 2023-09-29 00:00:00+00:00   \n",
              "1   TV      64.0  Finished Airing 2009-04-05 00:00:00+00:00   \n",
              "2   TV      24.0  Finished Airing 2011-04-06 00:00:00+00:00   \n",
              "3   TV      10.0  Finished Airing 2019-04-29 00:00:00+00:00   \n",
              "4   TV      51.0  Finished Airing 2015-04-08 00:00:00+00:00   \n",
              "\n",
              "                   aired_to duration_per_ep  score  scored_by  rank  \\\n",
              "0 2024-03-22 00:00:00+00:00   24 min per ep   9.30   676737.0   1.0   \n",
              "1 2010-07-04 00:00:00+00:00   24 min per ep   9.10  2223666.0   2.0   \n",
              "2 2011-09-14 00:00:00+00:00   24 min per ep   9.07  1467570.0   3.0   \n",
              "3 2019-07-01 00:00:00+00:00   23 min per ep   9.05  1700946.0   4.0   \n",
              "4 2016-03-30 00:00:00+00:00   24 min per ep   9.05   264260.0   5.0   \n",
              "\n",
              "                           rating                studios  \\\n",
              "0       PG-13 - Teens 13 or older               Madhouse   \n",
              "1  R - 17+ (violence & profanity)                  Bones   \n",
              "2       PG-13 - Teens 13 or older              White Fox   \n",
              "3  R - 17+ (violence & profanity)             Wit Studio   \n",
              "4       PG-13 - Teens 13 or older  Bandai Namco Pictures   \n",
              "\n",
              "                                           producers  \\\n",
              "0  Aniplex, Dentsu, Shogakukan-Shueisha Productio...   \n",
              "1  Aniplex, Square Enix, Mainichi Broadcasting Sy...   \n",
              "2  Frontier Works, Media Factory, Kadokawa Shoten...   \n",
              "3  Production I.G, Dentsu, Mainichi Broadcasting ...   \n",
              "4                          TV Tokyo, Aniplex, Dentsu   \n",
              "\n",
              "                                               image  \\\n",
              "0  https://cdn.myanimelist.net/images/anime/1015/...   \n",
              "1  https://cdn.myanimelist.net/images/anime/1208/...   \n",
              "2  https://cdn.myanimelist.net/images/anime/1935/...   \n",
              "3  https://cdn.myanimelist.net/images/anime/1517/...   \n",
              "4  https://cdn.myanimelist.net/images/anime/3/720...   \n",
              "\n",
              "                                       trailer  \\\n",
              "0  https://www.youtube.com/watch?v=ZEkwCGJ3o7M   \n",
              "1  https://www.youtube.com/watch?v=1ac3_YdSSy0   \n",
              "2  https://www.youtube.com/watch?v=27OZc-ku6is   \n",
              "3  https://www.youtube.com/watch?v=hKHepjfj5Tw   \n",
              "4                                          NaN   \n",
              "\n",
              "                                            synopsis  \n",
              "0  During their decade-long quest to defeat the D...  \n",
              "1  After a horrific alchemy experiment goes wrong...  \n",
              "2  Eccentric scientist Rintarou Okabe has a never...  \n",
              "3  Seeking to restore humanity's diminishing hope...  \n",
              "4  Gintoki, Shinpachi, and Kagura return as the f...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af75bf3d-77a4-435e-9c7e-a40c8bc9ba18\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>genres</th>\n",
              "      <th>type</th>\n",
              "      <th>episodes</th>\n",
              "      <th>status</th>\n",
              "      <th>aired_from</th>\n",
              "      <th>aired_to</th>\n",
              "      <th>duration_per_ep</th>\n",
              "      <th>score</th>\n",
              "      <th>scored_by</th>\n",
              "      <th>rank</th>\n",
              "      <th>rating</th>\n",
              "      <th>studios</th>\n",
              "      <th>producers</th>\n",
              "      <th>image</th>\n",
              "      <th>trailer</th>\n",
              "      <th>synopsis</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>52991</td>\n",
              "      <td>Frieren: Beyond Journey's End</td>\n",
              "      <td>Adventure, Drama, Fantasy</td>\n",
              "      <td>TV</td>\n",
              "      <td>28.0</td>\n",
              "      <td>Finished Airing</td>\n",
              "      <td>2023-09-29 00:00:00+00:00</td>\n",
              "      <td>2024-03-22 00:00:00+00:00</td>\n",
              "      <td>24 min per ep</td>\n",
              "      <td>9.30</td>\n",
              "      <td>676737.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PG-13 - Teens 13 or older</td>\n",
              "      <td>Madhouse</td>\n",
              "      <td>Aniplex, Dentsu, Shogakukan-Shueisha Productio...</td>\n",
              "      <td>https://cdn.myanimelist.net/images/anime/1015/...</td>\n",
              "      <td>https://www.youtube.com/watch?v=ZEkwCGJ3o7M</td>\n",
              "      <td>During their decade-long quest to defeat the D...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5114</td>\n",
              "      <td>Fullmetal Alchemist: Brotherhood</td>\n",
              "      <td>Action, Adventure, Drama, Fantasy</td>\n",
              "      <td>TV</td>\n",
              "      <td>64.0</td>\n",
              "      <td>Finished Airing</td>\n",
              "      <td>2009-04-05 00:00:00+00:00</td>\n",
              "      <td>2010-07-04 00:00:00+00:00</td>\n",
              "      <td>24 min per ep</td>\n",
              "      <td>9.10</td>\n",
              "      <td>2223666.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>R - 17+ (violence &amp; profanity)</td>\n",
              "      <td>Bones</td>\n",
              "      <td>Aniplex, Square Enix, Mainichi Broadcasting Sy...</td>\n",
              "      <td>https://cdn.myanimelist.net/images/anime/1208/...</td>\n",
              "      <td>https://www.youtube.com/watch?v=1ac3_YdSSy0</td>\n",
              "      <td>After a horrific alchemy experiment goes wrong...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>9253</td>\n",
              "      <td>Steins;Gate</td>\n",
              "      <td>Drama, Sci-Fi, Suspense</td>\n",
              "      <td>TV</td>\n",
              "      <td>24.0</td>\n",
              "      <td>Finished Airing</td>\n",
              "      <td>2011-04-06 00:00:00+00:00</td>\n",
              "      <td>2011-09-14 00:00:00+00:00</td>\n",
              "      <td>24 min per ep</td>\n",
              "      <td>9.07</td>\n",
              "      <td>1467570.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>PG-13 - Teens 13 or older</td>\n",
              "      <td>White Fox</td>\n",
              "      <td>Frontier Works, Media Factory, Kadokawa Shoten...</td>\n",
              "      <td>https://cdn.myanimelist.net/images/anime/1935/...</td>\n",
              "      <td>https://www.youtube.com/watch?v=27OZc-ku6is</td>\n",
              "      <td>Eccentric scientist Rintarou Okabe has a never...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>38524</td>\n",
              "      <td>Attack on Titan Season 3 Part 2</td>\n",
              "      <td>Action, Drama, Suspense</td>\n",
              "      <td>TV</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Finished Airing</td>\n",
              "      <td>2019-04-29 00:00:00+00:00</td>\n",
              "      <td>2019-07-01 00:00:00+00:00</td>\n",
              "      <td>23 min per ep</td>\n",
              "      <td>9.05</td>\n",
              "      <td>1700946.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>R - 17+ (violence &amp; profanity)</td>\n",
              "      <td>Wit Studio</td>\n",
              "      <td>Production I.G, Dentsu, Mainichi Broadcasting ...</td>\n",
              "      <td>https://cdn.myanimelist.net/images/anime/1517/...</td>\n",
              "      <td>https://www.youtube.com/watch?v=hKHepjfj5Tw</td>\n",
              "      <td>Seeking to restore humanity's diminishing hope...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>28977</td>\n",
              "      <td>Gintama Season 4</td>\n",
              "      <td>Action, Comedy, Sci-Fi</td>\n",
              "      <td>TV</td>\n",
              "      <td>51.0</td>\n",
              "      <td>Finished Airing</td>\n",
              "      <td>2015-04-08 00:00:00+00:00</td>\n",
              "      <td>2016-03-30 00:00:00+00:00</td>\n",
              "      <td>24 min per ep</td>\n",
              "      <td>9.05</td>\n",
              "      <td>264260.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>PG-13 - Teens 13 or older</td>\n",
              "      <td>Bandai Namco Pictures</td>\n",
              "      <td>TV Tokyo, Aniplex, Dentsu</td>\n",
              "      <td>https://cdn.myanimelist.net/images/anime/3/720...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Gintoki, Shinpachi, and Kagura return as the f...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af75bf3d-77a4-435e-9c7e-a40c8bc9ba18')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-af75bf3d-77a4-435e-9c7e-a40c8bc9ba18 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-af75bf3d-77a4-435e-9c7e-a40c8bc9ba18');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d758774e-ba8f-4e72-b99a-fd81467901aa\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d758774e-ba8f-4e72-b99a-fd81467901aa')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d758774e-ba8f-4e72-b99a-fd81467901aa button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "anime",
              "summary": "{\n  \"name\": \"anime\",\n  \"rows\": 28825,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19617,\n        \"min\": 1,\n        \"max\": 61871,\n        \"num_unique_values\": 28607,\n        \"samples\": [\n          29511,\n          49964,\n          34540\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 28350,\n        \"samples\": [\n          \"BanG Dream! Film Live\",\n          \"Liyuanba Biezhuan\",\n          \"The Genius Prince's Guide to Raising a Nation Out of Debt: Short Drama Specials\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 935,\n        \"samples\": [\n          \"Action, Adventure, Comedy, Supernatural\",\n          \"Drama, Fantasy, Suspense\",\n          \"Award Winning, Slice of Life\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"PV\",\n          \"TV Special\",\n          \"ONA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"episodes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 46.84123927557376,\n        \"min\": 1.0,\n        \"max\": 3057.0,\n        \"num_unique_values\": 253,\n        \"samples\": [\n          250.0,\n          148.0,\n          1787.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Finished Airing\",\n          \"Currently Airing\",\n          \"Not yet aired\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"aired_from\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1917-01-01 00:00:00+00:00\",\n        \"max\": \"2027-01-01 00:00:00+00:00\",\n        \"num_unique_values\": 9251,\n        \"samples\": [\n          \"2021-04-17 00:00:00+00:00\",\n          \"2013-03-06 00:00:00+00:00\",\n          \"1987-07-01 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"aired_to\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1962-02-25 00:00:00+00:00\",\n        \"max\": \"2025-12-05 00:00:00+00:00\",\n        \"num_unique_values\": 5486,\n        \"samples\": [\n          \"2024-08-17 00:00:00+00:00\",\n          \"1981-08-31 00:00:00+00:00\",\n          \"1997-03-17 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_per_ep\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 345,\n        \"samples\": [\n          \"13 min\",\n          \"26 min\",\n          \"2 hr 33 min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8898353201623492,\n        \"min\": 1.89,\n        \"max\": 9.3,\n        \"num_unique_values\": 569,\n        \"samples\": [\n          6.96,\n          8.3,\n          7.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"scored_by\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 121297.3459521866,\n        \"min\": 101.0,\n        \"max\": 2943048.0,\n        \"num_unique_values\": 9111,\n        \"samples\": [\n          21106.0,\n          88570.0,\n          60367.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6386.404387601537,\n        \"min\": 0.0,\n        \"max\": 21729.0,\n        \"num_unique_values\": 17833,\n        \"samples\": [\n          19433.0,\n          19521.0,\n          293.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"PG-13 - Teens 13 or older\",\n          \"R - 17+ (violence & profanity)\",\n          \"Rx - Hentai\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"studios\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1862,\n        \"samples\": [\n          \"dwarf\",\n          \"Sunrise, Kino Production\",\n          \"Starry Cube\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"producers\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5120,\n        \"samples\": [\n          \"Starchild Records, Mainichi Broadcasting System\",\n          \"AIC, Media Factory, TBS, Magic Capsule, Bushiroad, Bandai Namco Games, Good Smile Company\",\n          \"TV Asahi, Sotsu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 28315,\n        \"samples\": [\n          \"https://cdn.myanimelist.net/images/anime/1968/131221l.jpg\",\n          \"https://cdn.myanimelist.net/images/anime/1784/100410l.jpg\",\n          \"https://cdn.myanimelist.net/images/anime/1045/109449l.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trailer\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5344,\n        \"samples\": [\n          \"https://www.youtube.com/watch?v=H52u2ZHv2p8\",\n          \"https://www.youtube.com/watch?v=MD_q7xYb-Xs\",\n          \"https://www.youtube.com/watch?v=oUKR2SmuqQI\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"synopsis\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21991,\n        \"samples\": [\n          \"DVD specials of Kirakira Shougakusei Celeb-chan. These were 'original draft' episodes. As in, these episodes were created for the TV broadcast but were either cut entirely or their concepts were extremely reworked. For example, Celeb-chan's toy poodle rather than being an aggressive small dog, is portrayed as a large-bodied  severely inbred dog f\",\n          \"In the land of Kuruda, warriors with magical powers and incredible fighting skills battle for the ultimate prize: the title of Sevaar, the strongest warrior in the land. Elle Ragu, nicknamed Shadow Skill, is the newest Sevaar to emerge, but that doesn't make her life any easier. Teaching her \\\"little brother,\\\" Gau, how to be a warrior, fending off assassins from other kingdoms and thwarting enemy invasions is hard enough, but her biggest challenge will be paying off her drink\",\n          \"Yakou, a gentle human woman, works at a detective agency. Tounome is a smart and gentle invisible man. The invisible man's ability is perfect for detective work. However, the blind Yakou can still figure out where Tounome is, even if he disappears. Before they know it, the two become attracted to each other...?\\n\\n(Source:\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "anime.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora vamos a cambiar el formato de las fechas"
      ],
      "metadata": {
        "id": "EiwGRwQLSY4A"
      },
      "id": "EiwGRwQLSY4A"
    },
    {
      "cell_type": "code",
      "source": [
        "anime['aired_from_year'] = anime['aired_from'].dt.year\n",
        "\n",
        "anime['aired_to_year'] = anime['aired_to'].dt.year"
      ],
      "metadata": {
        "id": "7eDVXPsrSt8d"
      },
      "id": "7eDVXPsrSt8d",
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "id": "d0d1f7c6-8345-4b29-b6b2-0eb2d730b04d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "d0d1f7c6-8345-4b29-b6b2-0eb2d730b04d",
        "outputId": "e0201a12-db13-4dc4-a217-5128c6d866e2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  id              name  genres   type      episodes  \\\n",
              "count   28825.000000             28825   22756  28738  28046.000000   \n",
              "unique           NaN             28350     935      9           NaN   \n",
              "top              NaN  Spirit Guardians  Comedy     TV           NaN   \n",
              "freq             NaN                 5    2621   8249           NaN   \n",
              "mean    34131.945117               NaN     NaN    NaN     13.827462   \n",
              "min         1.000000               NaN     NaN    NaN      1.000000   \n",
              "25%     15979.000000               NaN     NaN    NaN      1.000000   \n",
              "50%     38070.000000               NaN     NaN    NaN      2.000000   \n",
              "75%     51060.000000               NaN     NaN    NaN     13.000000   \n",
              "max     61871.000000               NaN     NaN    NaN   3057.000000   \n",
              "std     19617.957463               NaN     NaN    NaN     46.841239   \n",
              "\n",
              "                 status                           aired_from  \\\n",
              "count             28825                                27870   \n",
              "unique                3                                  NaN   \n",
              "top     Finished Airing                                  NaN   \n",
              "freq              27813                                  NaN   \n",
              "mean                NaN  2009-08-25 11:09:28.094725376+00:00   \n",
              "min                 NaN            1917-01-01 00:00:00+00:00   \n",
              "25%                 NaN            2004-03-06 00:00:00+00:00   \n",
              "50%                 NaN            2014-01-10 00:00:00+00:00   \n",
              "75%                 NaN            2020-01-01 00:00:00+00:00   \n",
              "max                 NaN            2027-01-01 00:00:00+00:00   \n",
              "std                 NaN                                  NaN   \n",
              "\n",
              "                                   aired_to duration_per_ep         score  \\\n",
              "count                                 10930           28825  18599.000000   \n",
              "unique                                  NaN             345           NaN   \n",
              "top                                     NaN   24 min per ep           NaN   \n",
              "freq                                    NaN            2078           NaN   \n",
              "mean    2011-08-31 20:10:29.752973312+00:00             NaN      6.397697   \n",
              "min               1962-02-25 00:00:00+00:00             NaN      1.890000   \n",
              "25%               2006-03-24 00:00:00+00:00             NaN      5.780000   \n",
              "50%               2014-11-24 12:00:00+00:00             NaN      6.370000   \n",
              "75%               2020-03-23 00:00:00+00:00             NaN      7.030000   \n",
              "max               2025-12-05 00:00:00+00:00             NaN      9.300000   \n",
              "std                                     NaN             NaN      0.889835   \n",
              "\n",
              "           scored_by          rank                     rating         studios  \\\n",
              "count   1.859900e+04  21962.000000                      28101           16936   \n",
              "unique           NaN           NaN                          6            1862   \n",
              "top              NaN           NaN  PG-13 - Teens 13 or older  Toei Animation   \n",
              "freq             NaN           NaN                      10413             871   \n",
              "mean    2.989163e+04  10522.959749                        NaN             NaN   \n",
              "min     1.010000e+02      0.000000                        NaN             NaN   \n",
              "25%     3.400000e+02   4989.250000                        NaN             NaN   \n",
              "50%     1.544000e+03  10462.500000                        NaN             NaN   \n",
              "75%     1.009150e+04  16022.750000                        NaN             NaN   \n",
              "max     2.943048e+06  21729.000000                        NaN             NaN   \n",
              "std     1.212973e+05   6386.404388                        NaN             NaN   \n",
              "\n",
              "       producers                                              image  \\\n",
              "count      13452                                              28825   \n",
              "unique      5120                                              28315   \n",
              "top          NHK  https://cdn.myanimelist.net/img/sp/icon/apple-...   \n",
              "freq        1158                                                293   \n",
              "mean         NaN                                                NaN   \n",
              "min          NaN                                                NaN   \n",
              "25%          NaN                                                NaN   \n",
              "50%          NaN                                                NaN   \n",
              "75%          NaN                                                NaN   \n",
              "max          NaN                                                NaN   \n",
              "std          NaN                                                NaN   \n",
              "\n",
              "                                            trailer                synopsis  \\\n",
              "count                                          5474                   23457   \n",
              "unique                                         5344                   21991   \n",
              "top     https://www.youtube.com/watch?v=Xf73IT2cnGE  Music video for the so   \n",
              "freq                                              4                      64   \n",
              "mean                                            NaN                     NaN   \n",
              "min                                             NaN                     NaN   \n",
              "25%                                             NaN                     NaN   \n",
              "50%                                             NaN                     NaN   \n",
              "75%                                             NaN                     NaN   \n",
              "max                                             NaN                     NaN   \n",
              "std                                             NaN                     NaN   \n",
              "\n",
              "        aired_from_year  aired_to_year  \n",
              "count      27870.000000   10930.000000  \n",
              "unique              NaN            NaN  \n",
              "top                 NaN            NaN  \n",
              "freq                NaN            NaN  \n",
              "mean        2009.221708    2011.144465  \n",
              "min         1917.000000    1962.000000  \n",
              "25%         2004.000000    2006.000000  \n",
              "50%         2014.000000    2014.000000  \n",
              "75%         2020.000000    2020.000000  \n",
              "max         2027.000000    2025.000000  \n",
              "std           15.048723      11.586704  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-43f7277e-dd4d-4b82-9e50-fd1059105068\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>genres</th>\n",
              "      <th>type</th>\n",
              "      <th>episodes</th>\n",
              "      <th>status</th>\n",
              "      <th>aired_from</th>\n",
              "      <th>aired_to</th>\n",
              "      <th>duration_per_ep</th>\n",
              "      <th>score</th>\n",
              "      <th>scored_by</th>\n",
              "      <th>rank</th>\n",
              "      <th>rating</th>\n",
              "      <th>studios</th>\n",
              "      <th>producers</th>\n",
              "      <th>image</th>\n",
              "      <th>trailer</th>\n",
              "      <th>synopsis</th>\n",
              "      <th>aired_from_year</th>\n",
              "      <th>aired_to_year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>28825.000000</td>\n",
              "      <td>28825</td>\n",
              "      <td>22756</td>\n",
              "      <td>28738</td>\n",
              "      <td>28046.000000</td>\n",
              "      <td>28825</td>\n",
              "      <td>27870</td>\n",
              "      <td>10930</td>\n",
              "      <td>28825</td>\n",
              "      <td>18599.000000</td>\n",
              "      <td>1.859900e+04</td>\n",
              "      <td>21962.000000</td>\n",
              "      <td>28101</td>\n",
              "      <td>16936</td>\n",
              "      <td>13452</td>\n",
              "      <td>28825</td>\n",
              "      <td>5474</td>\n",
              "      <td>23457</td>\n",
              "      <td>27870.000000</td>\n",
              "      <td>10930.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>NaN</td>\n",
              "      <td>28350</td>\n",
              "      <td>935</td>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>345</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6</td>\n",
              "      <td>1862</td>\n",
              "      <td>5120</td>\n",
              "      <td>28315</td>\n",
              "      <td>5344</td>\n",
              "      <td>21991</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Spirit Guardians</td>\n",
              "      <td>Comedy</td>\n",
              "      <td>TV</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Finished Airing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 min per ep</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PG-13 - Teens 13 or older</td>\n",
              "      <td>Toei Animation</td>\n",
              "      <td>NHK</td>\n",
              "      <td>https://cdn.myanimelist.net/img/sp/icon/apple-...</td>\n",
              "      <td>https://www.youtube.com/watch?v=Xf73IT2cnGE</td>\n",
              "      <td>Music video for the so</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5</td>\n",
              "      <td>2621</td>\n",
              "      <td>8249</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27813</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2078</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10413</td>\n",
              "      <td>871</td>\n",
              "      <td>1158</td>\n",
              "      <td>293</td>\n",
              "      <td>4</td>\n",
              "      <td>64</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>34131.945117</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>13.827462</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2009-08-25 11:09:28.094725376+00:00</td>\n",
              "      <td>2011-08-31 20:10:29.752973312+00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.397697</td>\n",
              "      <td>2.989163e+04</td>\n",
              "      <td>10522.959749</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2009.221708</td>\n",
              "      <td>2011.144465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1917-01-01 00:00:00+00:00</td>\n",
              "      <td>1962-02-25 00:00:00+00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.890000</td>\n",
              "      <td>1.010000e+02</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1917.000000</td>\n",
              "      <td>1962.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>15979.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2004-03-06 00:00:00+00:00</td>\n",
              "      <td>2006-03-24 00:00:00+00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.780000</td>\n",
              "      <td>3.400000e+02</td>\n",
              "      <td>4989.250000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2004.000000</td>\n",
              "      <td>2006.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>38070.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-01-10 00:00:00+00:00</td>\n",
              "      <td>2014-11-24 12:00:00+00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.370000</td>\n",
              "      <td>1.544000e+03</td>\n",
              "      <td>10462.500000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014.000000</td>\n",
              "      <td>2014.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>51060.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2020-01-01 00:00:00+00:00</td>\n",
              "      <td>2020-03-23 00:00:00+00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.030000</td>\n",
              "      <td>1.009150e+04</td>\n",
              "      <td>16022.750000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2020.000000</td>\n",
              "      <td>2020.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>61871.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3057.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2027-01-01 00:00:00+00:00</td>\n",
              "      <td>2025-12-05 00:00:00+00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.300000</td>\n",
              "      <td>2.943048e+06</td>\n",
              "      <td>21729.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2027.000000</td>\n",
              "      <td>2025.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>19617.957463</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>46.841239</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.889835</td>\n",
              "      <td>1.212973e+05</td>\n",
              "      <td>6386.404388</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.048723</td>\n",
              "      <td>11.586704</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43f7277e-dd4d-4b82-9e50-fd1059105068')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-43f7277e-dd4d-4b82-9e50-fd1059105068 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-43f7277e-dd4d-4b82-9e50-fd1059105068');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-52aa0ca0-764f-4cd2-a890-ea3903262858\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-52aa0ca0-764f-4cd2-a890-ea3903262858')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-52aa0ca0-764f-4cd2-a890-ea3903262858 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"anime\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19769.253098217814,\n        \"min\": 1.0,\n        \"max\": 61871.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          34131.94511708587,\n          51060.0,\n          28825.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          28350,\n          \"5\",\n          \"28825\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          935,\n          \"2621\",\n          \"22756\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9,\n          \"8249\",\n          \"28738\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"episodes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9815.415446544544,\n        \"min\": 1.0,\n        \"max\": 28046.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          28046.0,\n          13.827462026670469,\n          3057.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"27813\",\n          \"28825\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"aired_from\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"27870\",\n          \"2009-08-25 11:09:28.094725376+00:00\",\n          \"2020-01-01 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"aired_to\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"10930\",\n          \"2011-08-31 20:10:29.752973312+00:00\",\n          \"2020-03-23 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_per_ep\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          345,\n          \"2078\",\n          \"28825\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6573.838090629041,\n        \"min\": 0.8898353201623492,\n        \"max\": 18599.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.397697188020861,\n          7.03,\n          18599.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"scored_by\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1032123.5814376277,\n        \"min\": 101.0,\n        \"max\": 2943048.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29891.626646593904,\n          10091.5,\n          18599.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7904.430868958638,\n        \"min\": 0.0,\n        \"max\": 21962.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10522.95974865677,\n          16022.75,\n          21962.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6,\n          \"10413\",\n          \"28101\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"studios\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1862,\n          \"871\",\n          \"16936\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"producers\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5120,\n          \"1158\",\n          \"13452\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          28315,\n          \"293\",\n          \"28825\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trailer\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5344,\n          \"4\",\n          \"5474\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"synopsis\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          21991,\n          \"64\",\n          \"23457\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"aired_from_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9273.200329057172,\n        \"min\": 15.048723082282255,\n        \"max\": 27870.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2009.2217079296736,\n          2020.0,\n          27870.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"aired_to_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3329.7775931144483,\n        \"min\": 11.586703826581257,\n        \"max\": 10930.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2011.1444647758462,\n          2020.0,\n          10930.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "anime.describe(include = 'all')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6c2af27b-9ba4-4fbc-bfd4-4f3e30e14a93",
      "metadata": {
        "id": "6c2af27b-9ba4-4fbc-bfd4-4f3e30e14a93"
      },
      "source": [
        "#### Correcciones y limpieza del data set\n",
        "\n",
        "Debemos asegurar que los datos contenidos en el data set son totalmente claros.Por lo que se debe primero lo que contiene el cvs, si exiten datos de poco valor o nulos o duplicidades de estos."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "anime.status.unique()"
      ],
      "metadata": {
        "id": "1GgUOwJUVap-",
        "outputId": "3ac311ea-3997-4328-ca18-da8f01f1b0cb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "1GgUOwJUVap-",
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Finished Airing', 'Currently Airing', 'Not yet aired'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "id": "335e375d-f869-4418-91d4-34e3656d11b2",
      "metadata": {
        "id": "335e375d-f869-4418-91d4-34e3656d11b2"
      },
      "source": [
        "#### Información del data set"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "id": "2f5bfe68-a40f-4d8e-9a1a-c4933832abd1",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2f5bfe68-a40f-4d8e-9a1a-c4933832abd1",
        "outputId": "0096b5df-38e7-45fc-b414-c04cfa09b0e2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 28825 entries, 0 to 28824\n",
            "Data columns (total 20 columns):\n",
            " #   Column           Non-Null Count  Dtype              \n",
            "---  ------           --------------  -----              \n",
            " 0   id               28825 non-null  int64              \n",
            " 1   name             28825 non-null  object             \n",
            " 2   genres           22756 non-null  object             \n",
            " 3   type             28738 non-null  object             \n",
            " 4   episodes         28046 non-null  float64            \n",
            " 5   status           28825 non-null  object             \n",
            " 6   aired_from       27870 non-null  datetime64[ns, UTC]\n",
            " 7   aired_to         10930 non-null  datetime64[ns, UTC]\n",
            " 8   duration_per_ep  28825 non-null  object             \n",
            " 9   score            18599 non-null  float64            \n",
            " 10  scored_by        18599 non-null  float64            \n",
            " 11  rank             21962 non-null  float64            \n",
            " 12  rating           28101 non-null  object             \n",
            " 13  studios          16936 non-null  object             \n",
            " 14  producers        13452 non-null  object             \n",
            " 15  image            28825 non-null  object             \n",
            " 16  trailer          5474 non-null   object             \n",
            " 17  synopsis         23457 non-null  object             \n",
            " 18  aired_from_year  27870 non-null  float64            \n",
            " 19  aired_to_year    10930 non-null  float64            \n",
            "dtypes: datetime64[ns, UTC](2), float64(6), int64(1), object(11)\n",
            "memory usage: 4.4+ MB\n"
          ]
        }
      ],
      "source": [
        "anime.info()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6708f189-3680-405c-bd1d-c200f6ca7023",
      "metadata": {
        "id": "6708f189-3680-405c-bd1d-c200f6ca7023"
      },
      "source": [
        "#### Valores nulos o incorrectos\n",
        "\n",
        "Vamos a intentar remplazar los valores nulos\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "id": "8d479483-c875-4534-9b05-39d3a35676f6",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "8d479483-c875-4534-9b05-39d3a35676f6",
        "outputId": "5ae8e540-33d1-4a23-8e55-adce1386683e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                     0\n",
              "name                   0\n",
              "genres              6069\n",
              "type                  87\n",
              "episodes             779\n",
              "status                 0\n",
              "aired_from           955\n",
              "aired_to           17895\n",
              "duration_per_ep        0\n",
              "score              10226\n",
              "scored_by          10226\n",
              "rank                6863\n",
              "rating               724\n",
              "studios            11889\n",
              "producers          15373\n",
              "image                  0\n",
              "trailer            23351\n",
              "synopsis            5368\n",
              "aired_from_year      955\n",
              "aired_to_year      17895\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>name</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>genres</th>\n",
              "      <td>6069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>type</th>\n",
              "      <td>87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>episodes</th>\n",
              "      <td>779</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>status</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>aired_from</th>\n",
              "      <td>955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>aired_to</th>\n",
              "      <td>17895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>duration_per_ep</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>score</th>\n",
              "      <td>10226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>scored_by</th>\n",
              "      <td>10226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rank</th>\n",
              "      <td>6863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rating</th>\n",
              "      <td>724</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>studios</th>\n",
              "      <td>11889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>producers</th>\n",
              "      <td>15373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>image</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>trailer</th>\n",
              "      <td>23351</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>synopsis</th>\n",
              "      <td>5368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>aired_from_year</th>\n",
              "      <td>955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>aired_to_year</th>\n",
              "      <td>17895</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "#1-Ver cuantos valors nulos hay en cada variable\n",
        "anime.isnull().sum()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "id": "f5f62d0d-34cb-4f01-8ebc-50c4557795f2",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f5f62d0d-34cb-4f01-8ebc-50c4557795f2",
        "outputId": "662abfe7-8929-4d69-b0b5-a39cc7719116"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-10-3574188573.py:2: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '0' has dtype incompatible with datetime64[ns, UTC], please explicitly cast to a compatible dtype first.\n",
            "  anime.fillna(0,inplace=True)\n"
          ]
        }
      ],
      "source": [
        "#2- Averiguar los valores que faltan y replazarlos por 0\n",
        "anime.fillna(0,inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "194b02ac-65f3-4507-968d-1fa288c7d42e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "194b02ac-65f3-4507-968d-1fa288c7d42e",
        "outputId": "ddef0bf5-fd0f-4496-850f-8cd7be17ca61"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "218"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "# 3- Revisar si el dataset contiene datos duplicados\n",
        "sum(anime.duplicated())"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6d53ae98-fe63-4341-a873-a419c67b520a",
      "metadata": {
        "id": "6d53ae98-fe63-4341-a873-a419c67b520a"
      },
      "source": [
        "Como podemos observar el siguiente dataset contiene 12 variables que se pueden analizar a través de una serie de preguntas que nos permita explicar mejor la informacion que contiene el dataset.\n",
        "\n",
        "PREGUNTAS\n",
        "1. Influye el género en la cantidad de compras\n",
        "2. La edad como factor de influencia en la cantidad de compras\n",
        "3. La categoría de la ciudad inlfuye en las compras y en los tipos de compra\n",
        "4. El estado civil como factor condicional de la cantidad de compras\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fdd72774-c4a0-4155-961e-07163a133b51",
      "metadata": {
        "id": "fdd72774-c4a0-4155-961e-07163a133b51"
      },
      "source": [
        " # Gráfico 1: Cantidad de compras por categoría 1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "6ceb8003-b395-489d-98bb-00ae50bc8b08",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "id": "6ceb8003-b395-489d-98bb-00ae50bc8b08",
        "outputId": "92525588-b470-4a9d-cdbd-eca6e500fc76"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Configurar estilo de gráficos\n",
        "sns.set(style=\"whitegrid\")\n",
        "\n",
        "# --- Gráfico 1: Cantidad de compras según su frecuencia ---\n",
        "plt.figure(figsize=(6, 6))\n",
        "ax = sns.histplot(anime['status'], kde=False, bins=50, color='blue')\n",
        "\n",
        "# Añadir etiquetas con el valor de cada barra\n",
        "for p in ax.containers:\n",
        "    for rect in p:\n",
        "        height = rect.get_height()\n",
        "        # Añadir etiqueta en la parte superior de cada barra\n",
        "        ax.text(\n",
        "            rect.get_x() + rect.get_width() / 2,  # coordenada x del centro de la barra\n",
        "            height,                                # coordenada y en la altura de la barra\n",
        "            f'{int(height)}',                      # texto (cantidad)\n",
        "            ha='center', va='bottom', fontsize=10\n",
        "        )\n",
        "\n",
        "plt.title('Cantidad por Status', fontsize=16)\n",
        "plt.xlabel('Status', fontsize=12)\n",
        "plt.ylabel('Frecuencia', fontsize=12)\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analicemos cuantos programas aún siguen en el aire y ver cuales son los mas antiguos."
      ],
      "metadata": {
        "id": "84u27hlOYC9G"
      },
      "id": "84u27hlOYC9G"
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import pandas as pd\n",
        "\n",
        "# Filtrar los datos por estado \"Currently Airing\"\n",
        "currently_airing = anime[anime['status'] == 'Currently Airing']\n",
        "\n",
        "# Contar la cantidad de anime por año de \"aired_from_year\"\n",
        "contar_por_year = currently_airing['aired_from_year'].value_counts().sort_index()\n",
        "\n",
        "# Crear un DataFrame para mejor manejo en seaborn\n",
        "df_contar = contar_por_year.reset_index()\n",
        "df_contar.columns = ['Año', 'Cantidad']\n",
        "\n",
        "# Gráfico de barras\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(data=df_contar, x='Año', y='Cantidad', palette='Blues')\n",
        "\n",
        "# Agregar cantidad en cada barra\n",
        "for p in plt.gca().patches:\n",
        "    height = p.get_height()\n",
        "    plt.gca().text(\n",
        "        p.get_x() + p.get_width() / 2,\n",
        "        height,\n",
        "        f'{int(height)}',\n",
        "        ha='center',\n",
        "        va='bottom',\n",
        "        fontsize=9\n",
        "    )\n",
        "\n",
        "plt.title('Cantidad de anime actualmente en emisión por año de inicio', fontsize=16)\n",
        "plt.xlabel('Año de inicio', fontsize=14)\n",
        "plt.ylabel('Cantidad', fontsize=14)\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "ZAc_08iBYwhL",
        "outputId": "1605879d-7e72-4e6e-b855-6752bf9037eb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        }
      },
      "id": "ZAc_08iBYwhL",
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-13-2694266485.py:17: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(data=df_contar, x='Año', y='Cantidad', palette='Blues')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "1154ce1f-b81e-469b-8e03-ce99cc71802f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "1154ce1f-b81e-469b-8e03-ce99cc71802f",
        "outputId": "7c9e5fdc-1282-4fc2-9d49-d4a5b4028e4d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-14-1887718217.py:13: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(data=df_contar, x='Año', y='Cantidad', palette='Blues')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Filtrar los datos por estado \"Currently Airing\"\n",
        "currently_airing = anime[anime['status'] == 'Currently Airing']\n",
        "\n",
        "# Contar la cantidad de anime por año de \"aired_from_year\"\n",
        "contar_por_year = currently_airing['aired_from_year'].value_counts().sort_index()\n",
        "\n",
        "# Crear un DataFrame para mejor manejo en seaborn\n",
        "df_contar = contar_por_year.reset_index()\n",
        "df_contar.columns = ['Año', 'Cantidad']\n",
        "\n",
        "# Gráfico de barras\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(data=df_contar, x='Año', y='Cantidad', palette='Blues')\n",
        "\n",
        "# Agregar cantidad en cada barra\n",
        "for p in plt.gca().patches:\n",
        "    height = p.get_height()\n",
        "    plt.gca().text(\n",
        "        p.get_x() + p.get_width() / 2,\n",
        "        height,\n",
        "        f'{int(height)}',\n",
        "        ha='center',\n",
        "        va='bottom',\n",
        "        fontsize=9\n",
        "    )\n",
        "\n",
        "plt.title('Cantidad de anime actualmente en emisión por año de inicio', fontsize=16)\n",
        "plt.xlabel('Año de inicio', fontsize=14)\n",
        "plt.ylabel('Cantidad', fontsize=14)\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "9be024c2-c93c-4d82-879a-7c9af0ac5643",
      "metadata": {
        "id": "9be024c2-c93c-4d82-879a-7c9af0ac5643"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "id": "6e32076d-4a76-4178-9863-f454c0ea4e62",
      "metadata": {
        "id": "6e32076d-4a76-4178-9863-f454c0ea4e62"
      },
      "source": [
        " # Gráfico 2: Compras por género"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "c87a7a1a-66da-46d7-9695-fedb56a368e4",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        },
        "id": "c87a7a1a-66da-46d7-9695-fedb56a368e4",
        "outputId": "5ee31437-6754-4ec9-c45a-835ce52c59cd"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'data' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-15-3434699891.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Agrupar los datos por género y calcular la suma total de compras\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mgender_purchase\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Gender'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Purchase'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# Crear el gráfico interactivo con Plotly\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"
          ]
        }
      ],
      "source": [
        "#Gráfico 2. Compras por género\n",
        "import plotly.express as px\n",
        "\n",
        "\n",
        "# Agrupar los datos por género y calcular la suma total de compras\n",
        "gender_purchase = data.groupby('Gender', as_index=False)['Purchase'].sum()\n",
        "\n",
        "# Crear el gráfico interactivo con Plotly\n",
        "fig = px.bar(\n",
        "    gender_purchase,\n",
        "    x='Gender',\n",
        "    y='Purchase',\n",
        "    color='Gender',\n",
        "    text='Purchase',\n",
        "    title='Suma total de compras por género',\n",
        "    labels={'Purchase': 'Cantidad total de compras', 'Gender': 'Género'},\n",
        "    color_discrete_map={'M': 'blue', 'F': 'pink'}  # Asignar colores personalizados\n",
        ")\n",
        "\n",
        "# Ajustar las dimensiones\n",
        "fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n",
        "fig.update_layout(\n",
        "    xaxis_title=\"Género\",\n",
        "    yaxis_title=\"Cantidad total de compras\",\n",
        "    uniformtext_minsize=8,\n",
        "    uniformtext_mode='hide',\n",
        "    width=800,  # Ancho del gráfico\n",
        "    height=500  # Altura del gráfico\n",
        ")\n",
        "\n",
        "# Mostrar el gráfico interactivo\n",
        "fig.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "58ae6826-359a-4e91-91ce-8efc0e4196db",
      "metadata": {
        "id": "58ae6826-359a-4e91-91ce-8efc0e4196db"
      },
      "source": [
        "Las compras totales realizadas por hombres y mujeres, es decir clasificado por género influyen en el total de compras del Back Friday.\n",
        "Al tratarse de un gráfico interactivo, puedes identificar los valores exactos de las compras.\n",
        "La asignacion de colores facilita la distinción por generos y asi ofrece una visión más intuitiva.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "82d25e58-cef9-43fd-b11c-35f5eda30704",
      "metadata": {
        "id": "82d25e58-cef9-43fd-b11c-35f5eda30704"
      },
      "outputs": [],
      "source": [
        "# --- Gráfico 3: Promedios de compras por rango de edad ---\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# Crear la tabla dinámica con la media de compra por Edad y Ocupación\n",
        "pivot_data = data.pivot_table(values='Purchase', index='Occupation', columns='Age', aggfunc=np.mean)\n",
        "\n",
        "# Crear el heatmap\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.heatmap(pivot_data, cmap='viridis', annot=True, fmt='.2f', linewidths=0.5, cbar_kws={'label': 'Cantidad promedio de compra'}, xticklabels=True, yticklabels=True)\n",
        "plt.title('Promedios de compras por Rango de Edad y Ocupación', fontsize=16)\n",
        "plt.xlabel('Rango de Edad', fontsize=12)\n",
        "plt.ylabel('Ocupación', fontsize=12)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "240e2039-abae-4b65-a60f-c8ff72f05165",
      "metadata": {
        "id": "240e2039-abae-4b65-a60f-c8ff72f05165"
      },
      "source": [
        "#### Gráficos adicionales para la explicación de la variable OCUPACIÓN\n",
        "\n",
        "Para explicar mejor la funcionalidad de la varible 'Ocupación' en función del nivel de compras.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d94c2704-842c-4ba2-9087-197cc11adde5",
      "metadata": {
        "id": "d94c2704-842c-4ba2-9087-197cc11adde5"
      },
      "outputs": [],
      "source": [
        "# Grafico A - Cantidad Personas por ocupación\n",
        "\n",
        "ocupacion = blackfriday['Occupation'].value_counts();\n",
        "plt.figure(figsize = (16,6));\n",
        "plt.bar(ocupacion.index,ocupacion.values,color ='r');\n",
        "plt.xticks(ocupacion.index);\n",
        "plt.xlabel('Ocupación');\n",
        "plt.ylabel('Cantidad de consumidores');\n",
        "plt.title('Grafico A - Cantidad de Personas por Ocupación')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2d365207-64af-4872-86be-4f1512f588b5",
      "metadata": {
        "id": "2d365207-64af-4872-86be-4f1512f588b5"
      },
      "outputs": [],
      "source": [
        "#Grafico B - Media de compras por Ocupación\n",
        "data = blackfriday.groupby('Occupation')['Purchase'].mean();\n",
        "plt.figure(figsize=(16,5));\n",
        "plt.grid();\n",
        "plt.plot(data.index,data.values,'ro-');\n",
        "plt.xlabel('Ocupación');\n",
        "plt.ylabel('Media de compras en $');\n",
        "plt.title('Grafico B - Media de compras por cada Ocupación');\n",
        "plt.xticks(data.index);"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3f84e8c1-cbc0-4097-ba63-c7b334003b1a",
      "metadata": {
        "id": "3f84e8c1-cbc0-4097-ba63-c7b334003b1a"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.3"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}